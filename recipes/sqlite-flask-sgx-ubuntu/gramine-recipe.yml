---
- hosts: localhost
  become: true
  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        
    - name: Configure the SGX Driver
      block:
        - copy:
            content: 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main'
            dest: /etc/apt/sources.list.d/intel-sgx.list
        - get_url:
            url: https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key
            dest: /tmp/intel-sgx-deb.key
        - apt_key:
            file: /tmp/intel-sgx-deb.key
        - apt:
            name: ['libsgx-epid', 'libsgx-quote-ex', 'libsgx-dcap-ql']
            update_cache: yes

    - name: Install the SDK
      block:
        - apt:
            name: ['build-essential', 'python']
        - get_url:
            url: https://download.01.org/intel-sgx/latest/linux-latest/distro/ubuntu20.04-server/sgx_linux_x64_sdk_2.21.100.1.bin
            dest: /tmp/sgx_linux_x64_sdk_2.21.100.1.bin
            mode: '0755'
        - command:
            cmd: ./sgx_linux_x64_sdk_2.21.100.1.bin --prefix /opt/intel
            chdir: /tmp/
        - apt:
            name: ['libsgx-enclave-common-dev', 'libsgx-dcap-ql-dev', 'libsgx-dcap-default-qpl-dev']

    - name: Configure Environment Variable for SDK
      blockinfile:
        path: ~/.bashrc
        block: |
          source /opt/intel/sgxsdk/environment

    - name: Install Additional Dependencies & Libraries
      apt:
        name:
          - build-essential
          - ocaml
          - ocamlbuild
          - automake
          - autoconf
          - libtool
          - wget
          - libssl-dev
          - git
          - cmake
          - perl
          - libssl-dev 
          - libcurl4-openssl-dev 
          - protobuf-compiler 
          - libprotobuf-dev 
          - debhelper 
          - cmake 
          - reprepro 
          - unzip 
          - pkgconf 
          - libboost-dev 
          - libboost-system-dev 
          - libboost-thread-dev 
          - lsb-release 
          - libsystemd0 
          - docker.io 
          - python3 
          - python3-pip
    - name: Install Docker and Python packages
      block:
        - apt:
            name: ['docker.io', 'python3', 'python3-pip']
        - pip:
            name: ['docker', 'jinja2', 'tomli', 'tomli-w', 'pyyaml']
            executable: pip3
        - user:
            name: "{{ ansible_user_id }}"
            groups: docker
            append: yes
        - file:
            path: /var/run/docker.sock
            owner: "{{ ansible_user_id }}"

    - name: Install PSW
      block:
        - git:
            repo: 'https://github.com/intel/linux-sgx.git'
            dest: /tmp/linux-sgx
        - command:
            cmd: make preparation
            chdir: /tmp/linux-sgx
        - command:
            cmd: make psw
            chdir: /tmp/linux-sgx
        - copy:
            src: /tmp/linux-sgx/external/toolset/ubuntu20.04/
            dest: /usr/local/bin/

    - name: Install Gramine
      block:
        - get_url:
            url: https://packages.gramineproject.io/gramine-keyring.gpg
            dest: /usr/share/keyrings/gramine-keyring.gpg
        - copy:
            content: "deb [arch=amd64 signed-by=/usr/share/keyrings/gramine-keyring.gpg] https://packages.gramineproject.io/ {{ ansible_distribution_release }} main"
            dest: /etc/apt/sources.list.d/gramine.list
        - get_url:
            url: https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key
            dest: /usr/share/keyrings/intel-sgx-deb.asc
        - copy:
            content: "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-sgx-deb.asc] https://download.01.org/intel-sgx/sgx_repo/ubuntu {{ ansible_distribution_release }} main"
            dest: /etc/apt/sources.list.d/intel-sgx.list
        - replace:
            path: /etc/sgx_default_qcnl.conf
            regexp: '( \"pccs_url\": \"https://).*(/sgx/certification.*)'
            replace: '\1global.acccache.azure.net\2'
        - apt:
            name: gramine
            update_cache: yes
            force: yes

    - name: Generate a signing key for gramine
      command:
        cmd: gramine-sgx-gen-private-key

    - name: Clone the Gramine Project for Intel Confidential Compute for X and POC example repository
      git:
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
      loop:
        - { repo: 'https://github.com/shreejam21/contrib.git', dest: '/tmp/contrib' }
        - { repo: 'https://github.com/shreejam21/sgx-demo.git', dest: '/tmp/sgx-demo' }


    - name: Build Docker image
      shell: cd /tmp/sgx-demo && docker build -t sgx-app .
      become: true

